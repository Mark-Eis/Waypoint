[{"path":"https://mark-eis.github.io/Waypoint/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Waypoint authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mark-eis.github.io/Waypoint/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mark Eisler. Maintainer.","code":""},{"path":"https://mark-eis.github.io/Waypoint/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Eisler M (2025). Waypoint: Convert Validate Geographic Coordinates Waypoints. R package version 1.0.0.00002, https://mark-eis.github.io/Waypoint/.","code":"@Manual{,   title = {Waypoint: Convert and Validate Geographic Coordinates and Waypoints},   author = {Mark Eisler},   year = {2025},   note = {R package version 1.0.0.00002},   url = {https://mark-eis.github.io/Waypoint/}, }"},{"path":[]},{"path":"https://mark-eis.github.io/Waypoint/index.html","id":"conversion-validation-and-print-formatting-of-geographic-coordinates","dir":"","previous_headings":"","what":"Conversion, Validation and Print Formatting of Geographic Coordinates.","title":"Convert and Validate Geographic Coordinates and Waypoints","text":"Author: Mark C. Eisler eMail: Mark.Eisler@bristol.ac.uk ORCID = 0000-0001-6843-3345","code":""},{"path":"https://mark-eis.github.io/Waypoint/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Convert and Validate Geographic Coordinates and Waypoints","text":"can install development version ParaAnita GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Mark-Eis/Waypoint\")"},{"path":"https://mark-eis.github.io/Waypoint/index.html","id":"waypoint-package-description-","dir":"","previous_headings":"","what":"Waypoint Package Description: –","title":"Convert and Validate Geographic Coordinates and Waypoints","text":"Conversion, validation print formatting geographic coordinates.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/Rcpp_modules_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions and Objects created by Rcpp Modules Example — Rcpp Modules Examples","title":"Functions and Objects created by Rcpp Modules Example — Rcpp Modules Examples","text":"function objects accessible R via Rcpp Modules mechanism   creates based declaration C++ file.","code":""},{"path":[]},{"path":"https://mark-eis.github.io/Waypoint/reference/Waypoint-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert and Validate Geographic Coordinates and Waypoints — Waypoint-package","title":"Convert and Validate Geographic Coordinates and Waypoints — Waypoint-package","text":"Package Waypoint converts geographic coordinates waypoints three common formats, validates values plausible geographic locations prints formatted values. three possible formats () decimal degrees, (ii) degrees minutes, (iii) degrees minutes seconds.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/Waypoint-package.html","id":"package-content","dir":"Reference","previous_headings":"","what":"Package Content","title":"Convert and Validate Geographic Coordinates and Waypoints — Waypoint-package","text":"Index:  package yet installed build time.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/Waypoint-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert and Validate Geographic Coordinates and Waypoints — Waypoint-package","text":"Mark Eisler","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/Waypoint-package.html","id":"maintainer","dir":"Reference","previous_headings":"","what":"Maintainer","title":"Convert and Validate Geographic Coordinates and Waypoints — Waypoint-package","text":"Mark Eisler <mark@markeisler.com>","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographic or GPS Coordinate Class — coords","title":"Geographic or GPS Coordinate Class — coords","text":"coords() creates robust representation series geographic GPS coordinates instantiated object class \"coords\". coords() replacement form function coords()<- also convert format existing objects class \"coords\" () decimal degrees, (ii) degrees minutes, (iii) degrees, minutes seconds.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographic or GPS Coordinate Class — coords","text":"","code":"coords(nv, fmt = 1L)  coords(nv) <- value  # S3 method for class 'coords' print(cd)"},{"path":"https://mark-eis.github.io/Waypoint/reference/coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geographic or GPS Coordinate Class — coords","text":"nv numeric vector coordinate values, optionally named. fmt, value integer, 1L, 2L 3L, indicating current desired coordinate format; default 1L. cd object class \"coords\", created function coords().","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geographic or GPS Coordinate Class — coords","text":"object class \"coords\" comprising numeric vector boolean vector attribute \"valid\", indicating whether individual coordinate values indeed valid, described  Details.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/coords.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geographic or GPS Coordinate Class — coords","text":"Individual values provided numeric vector argument nv decimal point number whole degrees case decimal degrees,  number whole minutes case degrees minutes, number whole seconds case degrees, minutes seconds. fmt argument used provide format values numeric vector converted \"coords\" object, desired  format \"coords\" object converted new format.  fmt 1 decimal degrees, 2 degrees minutes, 3 degrees, minutes seconds. values newly created \"coords\" object validated ensure plausible geographic locations described validate(). Likewise, check made ensure existing \"coords\" object converted new format already validated; , re-validated.","code":""},{"path":[]},{"path":"https://mark-eis.github.io/Waypoint/reference/coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geographic or GPS Coordinate Class — coords","text":"","code":"## Named numeric vector representing degrees and minutes (num_dm <- c(         5130.4659, 4932.7726, 4806.4339, 3853.3696, 0.0000, -3706.7044, -5306.2869, -5731.1536,         -007.6754, 1823.9137, -12246.7203, -7702.1145,0.0000, -1217.3178, 7331.0370, -2514.4093     ) |>     setNames(rep(         c(\"Nelson's Column\", \"Ostravice\", \"Tally Ho\", \"Washington Monument\", \"Null Island\",           \"Tristan da Cunha\", \"Mawson Peak\", \"Silvio Pettirossi International Airport\"), 2     )) ) #>                         Nelson's Column                               Ostravice  #>                               5130.4659                               4932.7726  #>                                Tally Ho                     Washington Monument  #>                               4806.4339                               3853.3696  #>                             Null Island                        Tristan da Cunha  #>                                  0.0000                              -3706.7044  #>                             Mawson Peak Silvio Pettirossi International Airport  #>                              -5306.2869                              -5731.1536  #>                         Nelson's Column                               Ostravice  #>                                 -7.6754                               1823.9137  #>                                Tally Ho                     Washington Monument  #>                             -12246.7203                              -7702.1145  #>                             Null Island                        Tristan da Cunha  #>                                  0.0000                              -1217.3178  #>                             Mawson Peak Silvio Pettirossi International Airport  #>                               7331.0370                              -2514.4093   ## Create \"coords\" object of degrees and minutes coords(num_dm, 2) #>  51°30.4659' (N/E)  Nelson's Column #>  49°32.7726' (N/E)  Ostravice #>  48°06.4339' (N/E)  Tally Ho #>  38°53.3696' (N/E)  Washington Monument #>   0°00.0000' (N/E)  Null Island #>  37°06.7044' (S/W)  Tristan da Cunha #>  53°06.2869' (S/W)  Mawson Peak #>  57°31.1536' (S/W)  Silvio Pettirossi International Airport #>   0°07.6754' (S/W)  Nelson's Column #>  18°23.9137' (N/E)  Ostravice #> 122°46.7203' (S/W)  Tally Ho #>  77°02.1145' (S/W)  Washington Monument #>   0°00.0000' (N/E)  Null Island #>  12°17.3178' (S/W)  Tristan da Cunha #>  73°31.0370' (N/E)  Mawson Peak #>  25°14.4093' (S/W)  Silvio Pettirossi International Airport  ## Convert \"coords\" object to degrees, minutes and seconds coords(num_dm) <- 3 num_dm #>  51°30'27.95\" (N/E)  Nelson's Column #>  49°32'46.36\" (N/E)  Ostravice #>  48°06'26.03\" (N/E)  Tally Ho #>  38°53'22.18\" (N/E)  Washington Monument #>   0°00'00.00\" (N/E)  Null Island #>  37°06'42.26\" (S/W)  Tristan da Cunha #>  53°06'17.21\" (S/W)  Mawson Peak #>  57°31'09.22\" (S/W)  Silvio Pettirossi International Airport #>   0°07'40.52\" (S/W)  Nelson's Column #>  18°23'54.82\" (N/E)  Ostravice #> 122°46'43.22\" (S/W)  Tally Ho #>  77°02'06.87\" (S/W)  Washington Monument #>   0°00'00.00\" (N/E)  Null Island #>  12°17'19.07\" (S/W)  Tristan da Cunha #>  73°31'02.22\" (N/E)  Mawson Peak #>  25°14'24.56\" (S/W)  Silvio Pettirossi International Airport  ## Convert to decimal degrees coords(num_dm) <- 1 num_dm #>   51.507765°  Nelson's Column #>   49.546210°  Ostravice #>   48.107232°  Tally Ho #>   38.889493°  Washington Monument #>    0.000000°  Null Island #>  -37.111740°  Tristan da Cunha #>  -53.104782°  Mawson Peak #>  -57.519227°  Silvio Pettirossi International Airport #>   -0.127923°  Nelson's Column #>   18.398562°  Ostravice #> -122.778672°  Tally Ho #>  -77.035242°  Washington Monument #>    0.000000°  Null Island #>  -12.288630°  Tristan da Cunha #>   73.517283°  Mawson Peak #>  -25.240155°  Silvio Pettirossi International Airport  ## Convert back to degrees and minutes coords(num_dm) <- 2 num_dm #>  51°30.4659' (N/E)  Nelson's Column #>  49°32.7726' (N/E)  Ostravice #>  48°06.4339' (N/E)  Tally Ho #>  38°53.3696' (N/E)  Washington Monument #>   0°00.0000' (N/E)  Null Island #>  37°06.7044' (S/W)  Tristan da Cunha #>  53°06.2869' (S/W)  Mawson Peak #>  57°31.1536' (S/W)  Silvio Pettirossi International Airport #>   0°07.6754' (S/W)  Nelson's Column #>  18°23.9137' (N/E)  Ostravice #> 122°46.7203' (S/W)  Tally Ho #>  77°02.1145' (S/W)  Washington Monument #>   0°00.0000' (N/E)  Null Island #>  12°17.3178' (S/W)  Tristan da Cunha #>  73°31.0370' (N/E)  Mawson Peak #>  25°14.4093' (S/W)  Silvio Pettirossi International Airport  rm(num_dm)"},{"path":"https://mark-eis.github.io/Waypoint/reference/latlon-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Latitude or Longitude Attribute for Coords — latlon-set","title":"Latitude or Longitude Attribute for Coords — latlon-set","text":"latlon()<- adds attribute \"latlon\" objects class \"coords\", modifies existing \"latlon\" attribute.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/latlon-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Latitude or Longitude Attribute for Coords — latlon-set","text":"","code":"latlon(cd) <- value"},{"path":"https://mark-eis.github.io/Waypoint/reference/latlon-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Latitude or Longitude Attribute for Coords — latlon-set","text":"cd object class \"coords\". value boolean vector length 1L length(cd).","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/latlon-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Latitude or Longitude Attribute for Coords — latlon-set","text":"Argument cd returned boolean vector attribute \"latlon\" updated appropriate.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/latlon-set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Latitude or Longitude Attribute for Coords — latlon-set","text":"Attribute \"latlon\" boolean vector length 1L length(cd) TRUE values represent latitude FALSE values represent longitude. Setting attribute length result error. boolean vector length 1L signifies values latitude TRUE, longitude FALSE. attribute used formatting printed output also validate(). Indeed, values cd revalidated every time attribute \"latlon\" added changed.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/latlon-set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Latitude or Longitude Attribute for Coords — latlon-set","text":"","code":"## Continuing example from `coords()`, named numeric vector representing degrees and minutes  ## Create \"coords\" object of degrees and minutes coords(num_dm) <- 2  ## Set \"latlon\" attribute to FALSE, length 1 latlon(num_dm) <- FALSE num_dm #>  51°30.4659' E  Nelson's Column #>  49°32.7726' E  Ostravice #>  48°06.4339' E  Tally Ho #>  38°53.3696' E  Washington Monument #>   0°00.0000' E  Null Island #>  37°06.7044' W  Tristan da Cunha #>  53°06.2869' W  Mawson Peak #>  57°31.1536' W  Silvio Pettirossi International Airport #>   0°07.6754' W  Nelson's Column #>  18°23.9137' E  Ostravice #> 122°46.7203' W  Tally Ho #>  77°02.1145' W  Washington Monument #>   0°00.0000' E  Null Island #>  12°17.3178' W  Tristan da Cunha #>  73°31.0370' E  Mawson Peak #>  25°14.4093' W  Silvio Pettirossi International Airport  ## Set \"latlon\" attribute to TRUE and FALSE (each n=8) latlon(num_dm) <- rep(c(TRUE, FALSE), each = 8) num_dm #>  51°30.4659' N  Nelson's Column #>  49°32.7726' N  Ostravice #>  48°06.4339' N  Tally Ho #>  38°53.3696' N  Washington Monument #>   0°00.0000' N  Null Island #>  37°06.7044' S  Tristan da Cunha #>  53°06.2869' S  Mawson Peak #>  57°31.1536' S  Silvio Pettirossi International Airport #>   0°07.6754' W  Nelson's Column #>  18°23.9137' E  Ostravice #> 122°46.7203' W  Tally Ho #>  77°02.1145' W  Washington Monument #>   0°00.0000' E  Null Island #>  12°17.3178' W  Tristan da Cunha #>  73°31.0370' E  Mawson Peak #>  25°14.4093' W  Silvio Pettirossi International Airport  ## Reversing latitude and longitude results in an implausible  ## longitude value and a warning message  latlon(num_dm) <- rep(c(FALSE, TRUE), each = 8) #> Warning: Validation failed! num_dm #> Warning: Printing invalid coords! #>  51°30.4659' E  Nelson's Column #>  49°32.7726' E  Ostravice #>  48°06.4339' E  Tally Ho #>  38°53.3696' E  Washington Monument #>   0°00.0000' E  Null Island #>  37°06.7044' W  Tristan da Cunha #>  53°06.2869' W  Mawson Peak #>  57°31.1536' W  Silvio Pettirossi International Airport #>   0°07.6754' S  Nelson's Column #>  18°23.9137' N  Ostravice #> 122°46.7203' S  Tally Ho #>  77°02.1145' S  Washington Monument #>   0°00.0000' N  Null Island #>  12°17.3178' S  Tristan da Cunha #>  73°31.0370' N  Mawson Peak #>  25°14.4093' S  Silvio Pettirossi International Airport  rm(num_dm)"},{"path":"https://mark-eis.github.io/Waypoint/reference/op-zero-length.html","id":null,"dir":"Reference","previous_headings":"","what":"Operator Providing Alternative to Zero-Length Object — op-zero-length","title":"Operator Providing Alternative to Zero-Length Object — op-zero-length","text":"Infix function implementing provision alternative object zero length.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/op-zero-length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Operator Providing Alternative to Zero-Length Object — op-zero-length","text":"","code":"x %L% y"},{"path":"https://mark-eis.github.io/Waypoint/reference/op-zero-length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Operator Providing Alternative to Zero-Length Object — op-zero-length","text":"x, y atomic vector arguments objects length() defined.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/op-zero-length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Operator Providing Alternative to Zero-Length Object — op-zero-length","text":"x, length(x) zero, y.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/op-zero-length.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Operator Providing Alternative to Zero-Length Object — op-zero-length","text":"infix function %L% may useful implementing (length(x)) x else y inspired null coalescing operator %||%.","code":""},{"path":[]},{"path":"https://mark-eis.github.io/Waypoint/reference/op-zero-length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Operator Providing Alternative to Zero-Length Object — op-zero-length","text":"","code":"c4 <- letters[1:4] c0 <- character(0) n3 <- 1:3 n0 <- numeric(0)  c4 %L% n3 #> [1] \"a\" \"b\" \"c\" \"d\" c0 %L% n3 #> [1] 1 2 3  n3 %L% c4 #> [1] 1 2 3 n0 %L% c4 #> [1] \"a\" \"b\" \"c\" \"d\"  rm(c4, c0, n3, n0)"},{"path":"https://mark-eis.github.io/Waypoint/reference/rcpp_hello_world.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple function using Rcpp — rcpp_hello_world","title":"Simple function using Rcpp — rcpp_hello_world","text":"Simple function using Rcpp","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/rcpp_hello_world.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple function using Rcpp — rcpp_hello_world","text":"","code":"rcpp_hello_world()"},{"path":"https://mark-eis.github.io/Waypoint/reference/rcpp_hello_world.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple function using Rcpp — rcpp_hello_world","text":"","code":"if (FALSE) { # \\dontrun{ rcpp_hello_world() } # }"},{"path":"https://mark-eis.github.io/Waypoint/reference/validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Coords or Waypoints — validate","title":"Validate Coords or Waypoints — validate","text":"validate() validate objects class \"coords\" \"waypoints\".","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Coords or Waypoints — validate","text":"","code":"# S3 method for class 'coords' validate(cd)  # S3 method for class 'waypoints' validate(df)"},{"path":"https://mark-eis.github.io/Waypoint/reference/validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Coords or Waypoints — validate","text":"cd object class \"coords\". df object class \"waypoints\".","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Coords or Waypoints — validate","text":"validate() returns argument boolean vector attribute \"valid\", attributes \"validlat\" \"validlon\" updated appropriate \"coords\" ' \"waypoints\" objects respectively.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/validate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate Coords or Waypoints — validate","text":"Individual coordinate values within \"coords\" \"waypoints\" objects validated ensure plausible geographic locations. absolute values coordinates degrees must exceed 180, 90 degrees latitude. Likewise absolute values minutes seconds components, given, must exceed 60 degrees, otherwise warning given \"valid\" attribute case \"coords\" object, \"validlat\" \"validlon\" attributes case \"waypoints\" object set FALSE non-compliant coordinate values.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/validate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Coords or Waypoints — validate","text":"","code":"## Continuing example from `coords()`, named numeric vector representing degrees and minutes  ## Create \"coords\" object of degrees and minutes coords(num_dm) <- 2  validate(num_dm) #>  51°30.4659' (N/E)  Nelson's Column #>  49°32.7726' (N/E)  Ostravice #>  48°06.4339' (N/E)  Tally Ho #>  38°53.3696' (N/E)  Washington Monument #>   0°00.0000' (N/E)  Null Island #>  37°06.7044' (S/W)  Tristan da Cunha #>  53°06.2869' (S/W)  Mawson Peak #>  57°31.1536' (S/W)  Silvio Pettirossi International Airport #>   0°07.6754' (S/W)  Nelson's Column #>  18°23.9137' (N/E)  Ostravice #> 122°46.7203' (S/W)  Tally Ho #>  77°02.1145' (S/W)  Washington Monument #>   0°00.0000' (N/E)  Null Island #>  12°17.3178' (S/W)  Tristan da Cunha #>  73°31.0370' (N/E)  Mawson Peak #>  25°14.4093' (S/W)  Silvio Pettirossi International Airport  ## Change first value to have more than 60 minutes num_dm[1] <- 5160.4659  validate(num_dm) #> Warning: Validation failed! #> Warning: Printing invalid coords! #>  51°60.4659' (N/E)  Nelson's Column #>  49°32.7726' (N/E)  Ostravice #>  48°06.4339' (N/E)  Tally Ho #>  38°53.3696' (N/E)  Washington Monument #>   0°00.0000' (N/E)  Null Island #>  37°06.7044' (S/W)  Tristan da Cunha #>  53°06.2869' (S/W)  Mawson Peak #>  57°31.1536' (S/W)  Silvio Pettirossi International Airport #>   0°07.6754' (S/W)  Nelson's Column #>  18°23.9137' (N/E)  Ostravice #> 122°46.7203' (S/W)  Tally Ho #>  77°02.1145' (S/W)  Washington Monument #>   0°00.0000' (N/E)  Null Island #>  12°17.3178' (S/W)  Tristan da Cunha #>  73°31.0370' (N/E)  Mawson Peak #>  25°14.4093' (S/W)  Silvio Pettirossi International Airport  ## Continuing example from `waypoints()`, dataframe representing waypoint names and latitude ## and longitude values in decimal degrees  # Create \"waypoints\" object of decimal degrees waypoints(wp1) <- 1  validate(wp1) #>  Latitude     Longitude #>  ___________  ____________ #>   51.507765°    -0.127924°  Nelson's Column #>   49.546210°    18.398562°  Ostravice #>   48.107232°  -122.778671°  Tally Ho #>   38.889494°   -77.035242°  Washington Monument #>    0.000000°     0.000000°  Null Island #>  -37.111740°   -12.288630°  Tristan da Cunha #>  -53.104781°    73.517283°  Mawson Peak #>  -57.519227°   -25.240156°  Silvio Pettirossi International Airport  ## Change third longitude absolute value to have more than 180 degrees wp1$lon[3] <- -182.778671  validate(wp1) #> Warning: Validation of longitude failed! #> Warning: Invalid longitude! #>  Latitude     Longitude #>  ___________  ____________ #>   51.507765°    -0.127924°  Nelson's Column #>   49.546210°    18.398562°  Ostravice #>   48.107232°  -182.778671°  Tally Ho #>   38.889494°   -77.035242°  Washington Monument #>    0.000000°     0.000000°  Null Island #>  -37.111740°   -12.288630°  Tristan da Cunha #>  -53.104781°    73.517283°  Mawson Peak #>  -57.519227°   -25.240156°  Silvio Pettirossi International Airport"},{"path":"https://mark-eis.github.io/Waypoint/reference/waypoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographic or GPS Waypoint Class — waypoints","title":"Geographic or GPS Waypoint Class — waypoints","text":"waypoints() creates robust representation series geographic GPS waypoints instantiated object class \"waypoints\". waypoints() replacement form function waypoints()<- also convert format existing objects class \"waypoints\" () decimal degrees, (ii) degrees minutes, (iii) degrees, minutes seconds.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/waypoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographic or GPS Waypoint Class — waypoints","text":"","code":"waypoints(df, fmt = 1L)  waypoints(df) <- value"},{"path":"https://mark-eis.github.io/Waypoint/reference/waypoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geographic or GPS Waypoint Class — waypoints","text":"df dataframe containing least two numeric columns containing corresponding values latitude longitude row representing waypoint. fmt, value integer, 1, 2 3, indicating current desired coordinate format; default 1.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/waypoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geographic or GPS Waypoint Class — waypoints","text":"object class \"waypoints\" comprising data.frame two boolean vector attributes \"validlat\" \"validlon\" indicating whether individual coordinate values indeed valid, described Details.","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/waypoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geographic or GPS Waypoint Class — waypoints","text":"Individual values provided numeric vector latitude longitude columns argument df decimal point number whole degrees case decimal degrees, number whole minutes case degrees minutes, number whole seconds case degrees, minutes seconds. fmt argument used provide format values dataframe converted \"waypoints\" object, desired  format \"waypoints\" object converted new format.  fmt 1 decimal degrees, 2 degrees minutes, 3 degrees, minutes seconds. latitude longitude values newly created \"waypoints\" object validated ensure plausible geographic locations described validate(). Likewise, check made ensure existing \"coords\" object converted new format already validated; , re-validated.","code":""},{"path":[]},{"path":"https://mark-eis.github.io/Waypoint/reference/waypoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geographic or GPS Waypoint Class — waypoints","text":"","code":"# Dataframe representing waypoint names and latitude and longitude values in decimal degrees (wp1 <- data.frame(     name = c(\"Nelson's Column\", \"Ostravice\", \"Tally Ho\", \"Washington Monument\", \"Null Island\",              \"Tristan da Cunha\", \"Mawson Peak\", \"Silvio Pettirossi International Airport\"),     lat = c(51.507765, 49.54621, 48.107232, 38.889494, 0, -37.11174, -53.104781, -57.519227),     lon = c(-0.127924, 18.398562, -122.778671, -77.035242, 0, -12.28863, 73.517283, -25.240156) )) #>                                      name       lat         lon #> 1                         Nelson's Column  51.50776   -0.127924 #> 2                               Ostravice  49.54621   18.398562 #> 3                                Tally Ho  48.10723 -122.778671 #> 4                     Washington Monument  38.88949  -77.035242 #> 5                             Null Island   0.00000    0.000000 #> 6                        Tristan da Cunha -37.11174  -12.288630 #> 7                             Mawson Peak -53.10478   73.517283 #> 8 Silvio Pettirossi International Airport -57.51923  -25.240156  # Create \"waypoints\" object of decimal degrees waypoints(wp1) #>  Latitude     Longitude #>  ___________  ____________ #>   51.507765°    -0.127924°  Nelson's Column #>   49.546210°    18.398562°  Ostravice #>   48.107232°  -122.778671°  Tally Ho #>   38.889494°   -77.035242°  Washington Monument #>    0.000000°     0.000000°  Null Island #>  -37.111740°   -12.288630°  Tristan da Cunha #>  -53.104781°    73.517283°  Mawson Peak #>  -57.519227°   -25.240156°  Silvio Pettirossi International Airport  ## Convert \"waypoints\" object to degrees and minutes waypoints(wp1) <- 2 wp1 #>  Latitude       Longitude #>  _____________  ______________ #>  51°30.4659' N    0°07.6754' W  Nelson's Column #>  49°32.7726' N   18°23.9137' E  Ostravice #>  48°06.4339' N  122°46.7203' W  Tally Ho #>  38°53.3696' N   77°02.1145' W  Washington Monument #>   0°00.0000' N    0°00.0000' E  Null Island #>  37°06.7044' S   12°17.3178' W  Tristan da Cunha #>  53°06.2869' S   73°31.0370' E  Mawson Peak #>  57°31.1536' S   25°14.4094' W  Silvio Pettirossi International Airport  ## Convert \"waypoints\" object to degrees, minutes and seconds waypoints(wp1) <- 3 wp1 #>  Latitude        Longitude #>  ______________  _______________ #>  51°30'27.95\" N    0°07'40.53\" W  Nelson's Column #>  49°32'46.36\" N   18°23'54.82\" E  Ostravice #>  48°06'26.04\" N  122°46'43.22\" W  Tally Ho #>  38°53'22.18\" N   77°02'06.87\" W  Washington Monument #>   0°00'00.00\" N    0°00'00.00\" E  Null Island #>  37°06'42.26\" S   12°17'19.07\" W  Tristan da Cunha #>  53°06'17.21\" S   73°31'02.22\" E  Mawson Peak #>  57°31'09.22\" S   25°14'24.56\" W  Silvio Pettirossi International Airport  ## Convert back to decimal degrees waypoints(wp1) <- 1 wp1 #>  Latitude     Longitude #>  ___________  ____________ #>   51.507765°    -0.127924°  Nelson's Column #>   49.546210°    18.398562°  Ostravice #>   48.107232°  -122.778671°  Tally Ho #>   38.889494°   -77.035242°  Washington Monument #>    0.000000°     0.000000°  Null Island #>  -37.111740°   -12.288630°  Tristan da Cunha #>  -53.104781°    73.517283°  Mawson Peak #>  -57.519227°   -25.240156°  Silvio Pettirossi International Airport  rm(wp1)"},{"path":"https://mark-eis.github.io/Waypoint/reference/which_ll.html","id":null,"dir":"Reference","previous_headings":"","what":"Work in progress — which_ll","title":"Work in progress — which_ll","text":"Work progress","code":""},{"path":"https://mark-eis.github.io/Waypoint/reference/which_ll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Work in progress — which_ll","text":"","code":"which_ll(candidate = c(\"latitude\", \"longitude\"))"}]
